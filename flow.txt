Interactive conversation
Alice and Bob are honest

Setup:
Long term keys:
Bob: PKb, SKb := GenCSKeyPair(g1)
Alice: PKa, SKa := GenCSKeyPair(g2)

[INSERT HERE DOWNGRADE ATTACK PROTECTION]

Alice starts conversation
REQUEST_MESSAGE {
"?OTRv34?Bob I need to talk to you. In private."
}

Bob starts the authenticated key exchange
ψ1 := ("I", g1^i)
[COMPUTE HERE DH-2048 KEY]

DH_COMMIT {
message : ψ1
selectedVersion: "?OTRv4?"
}

Alice completes the authenticated key exchange
γ := DREnc(PKa, PKb, "I" || "R" || g1^i || g1^r)
σ := Auth(Ai, ai, {S}, "I"||"R"|| g1^i ||γ || "?OTRv4?") where Ai, ai, and {S} are part of CS PK and SK.
ψ2 := ("R", γ, σ)
k := (g^i)^r
[COMPUTE HERE DH-2048 KEY]

DH_MESSAGE {
message: ψ2
}

Bob verifies the authenticated key exchange and decrypts γ
Verify(σ)
k := (g^r)^i

Alice and Bob initialize keys
Rk: root key
Ck: chain key
DHR: ratchet key
N: message counter
s: sender
r: responder
SK: super key
B1: Bob's initial ratchet key

Alice
[REPLACE THIS LINE WITH KDF(k, SIDHkey)]
Rk, Cks<none>, Ckr, B1 := KDF(k)
Ns, Nr = 0, 0
pubDH, privDH := GenDH()
iAmSender := pubDHa > pubDHb

Bob
Rk, Cks<none>, Ckr := KDF(k)
Ns, Nr = 0, 0
B1 := pubDH, privDH := GenDH()
iAmSender := pubDHa > pubDHb

Exchange of messages
Mk: message key

Alice sends message (s)
[REPLACE THIS LINE WITH KDF(k, SIDHkey)]
DHRs, DHRr<none>, B1 := KDF(k)
Mk := HMAC(CKs, "0")
c1 := Enc(Mk, p1)
Ns = Ns + 1
Cks = HMAC(Cks, "1")

DATA_MESSAGE {
message: c1
pk: pubDHa
}

Alice sends a second message (with same ratchet)
Mk := HMAC(CKs, "0") // Rosalie
c2 := Enc(Mk, p2)
Ns = Ns + 1
Cks = HMAC(Cks, "1")

DATA_MESSAGE {
message: c2
pk: pubDHa
}

Bob reads messages (r)
Mk := mac then dec(Cks, "0") // Rosalie
macP1 := get mac(Cks) // Rosalie
Verify(c1, macP1)
p1 := Des(Mk, c1)
Cks = HMAC(Cks, "1")

Bob sends heartbeat
DATA_MESSAGE {
message: macP1
}

Bob reads messages (r)
Mk := mac then dec(Cks, "0") // Rosalie
macP2 := get mac(Cks) // Rosalie
Verify(c2, macP2)
p2 := Des(Mk, c2)

Bob sends heartbeat
DATA_MESSAGE {
message: macP2
}

Bob responses (new ratchet)
pubDHb, privDHb := genECDH(x) // Rosalie EC, x
[REPLACE THIS LINE WITH KDF(Rk, privDHb, pubDHa, SIDHkey)]
Rk, Cks<none>, Ckr, DHRs, DHRr<none> := KDF(Rk, privDHb, pubDHa)
Ns, Nr = 0, 0

// bis message sending pletora
